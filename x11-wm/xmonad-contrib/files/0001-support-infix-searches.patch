From d152eb75030438e8b5a73cef5c29d8e56aa63782 Mon Sep 17 00:00:00 2001
From: Mike Lundy <mike@fluffypenguin.org>
Date: Tue, 28 Apr 2009 13:15:18 -0700
Subject: [PATCH] support infix search

---
 xmonad-contrib-0.8.1/XMonad/Prompt.hs        |    4 +++-
 xmonad-contrib-0.8.1/XMonad/Prompt/Window.hs |    5 ++++-
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/xmonad-contrib-0.8.1/XMonad/Prompt.hs b/xmonad-contrib-0.8.1/XMonad/Prompt.hs
index 7e3254b..d425ddc 100644
--- a/xmonad-contrib-0.8.1/XMonad/Prompt.hs
+++ b/xmonad-contrib-0.8.1/XMonad/Prompt.hs
@@ -106,6 +106,7 @@ data XPConfig =
         , defaultText       :: String     -- ^ The text by default in the prompt line
         , autoComplete      :: Maybe Int  -- ^ Just x: if only one completion remains, auto-select it,
                                           --   and delay by x microseconds
+        , subString         :: Bool       -- ^ Do an infix search
         } deriving (Show, Read)
 
 data XPType = forall p . XPrompt p => XPT p
@@ -175,6 +176,7 @@ defaultXPConfig =
         , historySize       = 256
         , defaultText       = []
         , autoComplete      = Nothing
+        , subString         = False
         }
 
 type ComplFunction = String -> IO [String]
@@ -816,4 +818,4 @@ historyCompletion = \x -> liftM (filter $ isInfixOf x) readHistoryIO
 -- 'getHistory' is uselessly of the type "XP [String]".
 readHistoryIO :: IO [String]
 readHistoryIO = do (hist,_) <- readHistory
-                   return $ map command_history hist
\ No newline at end of file
+                   return $ map command_history hist
diff --git a/xmonad-contrib-0.8.1/XMonad/Prompt/Window.hs b/xmonad-contrib-0.8.1/XMonad/Prompt/Window.hs
index c45417e..4d0b78b 100644
--- a/xmonad-contrib-0.8.1/XMonad/Prompt/Window.hs
+++ b/xmonad-contrib-0.8.1/XMonad/Prompt/Window.hs
@@ -82,5 +82,8 @@ doPrompt t c = do
       winAction a m    = flip whenJust (windows . a) . flip M.lookup m
       gotoAction       = winAction W.focusWindow
       bringAction      = winAction bringWindow
+      filterP
+        | (subString c) = isInfixOf
+        | otherwise     = isPrefixOf
 
-      compList m s = return . filter (isPrefixOf s) . map fst . M.toList $ m
+      compList m s = return . filter (filterP s) . map fst . M.toList $ m
-- 
1.6.2

