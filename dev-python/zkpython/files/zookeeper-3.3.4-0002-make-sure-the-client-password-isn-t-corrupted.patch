From a670fae06ed4020001cb6d63a7f0a86429f45633 Mon Sep 17 00:00:00 2001
From: Mike Lundy <mike@fluffypenguin.org>
Date: Tue, 21 Feb 2012 16:19:39 -0800
Subject: [PATCH 2/2] make sure the client password isn't corrupted

It's binary data, and so has to deal with a potential \0.
---
 src/contrib/zkpython/src/c/zookeeper.c |   15 ++++++++++-----
 1 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/contrib/zkpython/src/c/zookeeper.c b/src/contrib/zkpython/src/c/zookeeper.c
index a95b3f7..a8a22a3 100644
--- a/src/contrib/zkpython/src/c/zookeeper.c
+++ b/src/contrib/zkpython/src/c/zookeeper.c
@@ -581,7 +581,8 @@ static PyObject *pyzookeeper_init(PyObject *self, PyObject *args)
   //  int clientid = -1;
   clientid_t cid;
   cid.client_id = -1;
-  const char *passwd;
+  const char *passwd = NULL;
+  unsigned int passwd_len = 0;
   int handle = next_zhandle();
   if (handle == -1) {
     if (resize_zhandles() == 0) {
@@ -595,11 +596,15 @@ static PyObject *pyzookeeper_init(PyObject *self, PyObject *args)
     return NULL;
   }
 
-  if (!PyArg_ParseTuple(args, "s|Oi(Ls)", &host, &watcherfn, &recv_timeout, &cid.client_id, &passwd)) 
+  if (!PyArg_ParseTuple(args, "s|Oi(Ls#)", &host, &watcherfn, &recv_timeout, &cid.client_id, &passwd, &passwd_len))
     return NULL;
-  
+
   if (cid.client_id != -1) {
-    strncpy(cid.passwd, passwd, 16*sizeof(char));
+    if (passwd_len != 16) {
+      PyErr_SetString(BadArgumentsException, "Session password should be 16 bytes long");
+      return NULL;
+    }
+    memcpy(cid.passwd, passwd, 16*sizeof(char));
   }
   pywatcher_t *pyw = NULL;
   if (watcherfn != Py_None) {
@@ -1284,7 +1289,7 @@ PyObject *pyzoo_client_id(PyObject *self, PyObject *args)
   }
   CHECK_ZHANDLE(zkhid);
   const clientid_t *cid = zoo_client_id(zhandles[zkhid]);
-  return Py_BuildValue("(L,s)", cid->client_id, cid->passwd);
+  return Py_BuildValue("(L,s#)", cid->client_id, cid->passwd, 16);
 }
 
 /* DO NOT USE - context is used internally. This method is not exposed
-- 
1.7.8.4

